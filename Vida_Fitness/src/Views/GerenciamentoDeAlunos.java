/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controllers.GerenciamentoAlunosController;
import Models.Aluno;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author mathe
 */
public class GerenciamentoDeAlunos extends javax.swing.JFrame {

    int indiceSelecionado;
    List<Aluno> listaDeAlunos;
    GerenciamentoAlunosController controllerAlunos = new GerenciamentoAlunosController();
    DefaultTableModel dtm;

    /**
     * Creates new form GerenciamentoDeAlunos
     */
    public GerenciamentoDeAlunos() {
        initComponents();
        try {
            popularTabela();
        } catch (ParseException e) {
            Logger.getLogger(GerenciamentoDeAlunos.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDeAlunos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        campoValorFiltro = new javax.swing.JTextField();
        editarBotao = new javax.swing.JButton();
        excluirBotao = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(825, 538));
        setResizable(false);
        setSize(new java.awt.Dimension(830, 540));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelaDeAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Endereço", "Telefone Principal", "Modalidades", "Pacote", "Situação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaDeAlunos.setColumnSelectionAllowed(true);
        tabelaDeAlunos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaDeAlunos);
        tabelaDeAlunos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tabelaDeAlunos.getColumnModel().getColumnCount() > 0) {
            tabelaDeAlunos.getColumnModel().getColumn(2).setResizable(false);
            tabelaDeAlunos.getColumnModel().getColumn(5).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 820, 280));

        jPanel1.setBackground(new java.awt.Color(95, 158, 160));

        jButton1.setBackground(new java.awt.Color(11, 133, 176));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/back2.png"))); // NOI18N
        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 149, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Novo Cadastro");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Filtre:");

        campoValorFiltro.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        campoValorFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoValorFiltroKeyReleased(evt);
            }
        });

        editarBotao.setBackground(new java.awt.Color(224, 226, 0));
        editarBotao.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        editarBotao.setForeground(new java.awt.Color(255, 255, 255));
        editarBotao.setText("Editar");
        editarBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBotaoActionPerformed(evt);
            }
        });

        excluirBotao.setBackground(new java.awt.Color(255, 0, 51));
        excluirBotao.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        excluirBotao.setForeground(new java.awt.Color(255, 255, 255));
        excluirBotao.setText("Excluir");
        excluirBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirBotaoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Lista De Alunos Cadastrados");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 524, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(editarBotao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoValorFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(excluirBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(268, 268, 268)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editarBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(excluirBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(66, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(campoValorFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 210));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        QuadroPrincipal quadroPrincipal = new QuadroPrincipal();
        quadroPrincipal.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        CadastroEdicaoAluno cadastroAluno = new CadastroEdicaoAluno();
        cadastroAluno.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void editarBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBotaoActionPerformed
        if (tabelaDeAlunos.getSelectedRow() >= 0) {
            int linhaSelecionada = tabelaDeAlunos.getSelectedRow();
            String nome;
            nome = (String) tabelaDeAlunos.getValueAt(linhaSelecionada, 0);
            Aluno aluno = buscarAlunoNaLista(nome);
            CadastroEdicaoAluno telaCadastro = new CadastroEdicaoAluno(aluno);
            telaCadastro.setVisible(true);
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum aluno foi selecionado!");
        }
    }//GEN-LAST:event_editarBotaoActionPerformed

    private void excluirBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirBotaoActionPerformed
        if (tabelaDeAlunos.getSelectedRow() >= 0) {
            int linhaSelecionada = tabelaDeAlunos.getSelectedRow();
            String nome;
            nome = (String) tabelaDeAlunos.getValueAt(linhaSelecionada, 0);

            Aluno aluno = buscarAlunoNaLista(nome);
            int resposta = JOptionPane.showConfirmDialog(rootPane,
                    "Tem certeza que deseja excluir o(a) aluno(a) " + aluno.getNome() + "? "
                    + "Essa ação não poderá ser revertida.",
                    "Selecione uma Opção",
                    JOptionPane.YES_NO_OPTION);

            if (resposta != 1 & resposta != 2 & resposta != -1) {
                try {
                    controllerAlunos.deletarCadastroAluno(aluno.getIdAluno());
                    JOptionPane.showMessageDialog(this, "Aluno excluido com sucesso!");
                    popularTabela();
                } catch (SQLException e) {
                    Logger.getLogger(GerenciamentoDeAlunos.class.getName()).log(Level.SEVERE, null, e);
                    JOptionPane.showMessageDialog(this, "Ocorreu um erro ao excluir o aluno."
                            + "Tente novamente!");
                } catch (ParseException ex) {
                    Logger.getLogger(GerenciamentoDeAlunos.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Ocorreu um erro ao converter a data do cadastro."
                            + "Tente novamente!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum aluno foi selecionado!");
        }
    }//GEN-LAST:event_excluirBotaoActionPerformed

    private void campoValorFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoValorFiltroKeyReleased
        String valor = campoValorFiltro.getText();
        filtrar(valor);
    }//GEN-LAST:event_campoValorFiltroKeyReleased

    private Aluno buscarAlunoNaLista(String nome) {
        for (int i = 0; i < listaDeAlunos.size(); i++) {
            if (nome.equalsIgnoreCase(listaDeAlunos.get(i).getNome())) {
                return listaDeAlunos.get(i);
            }
        }
        return null;
    }

    private void popularTabela() throws ParseException {
        dtm = (DefaultTableModel) tabelaDeAlunos.getModel();
        dtm.setNumRows(0);
        listaDeAlunos = controllerAlunos.getListaDeAlunos();
        String modalidades = "";
        String situacao;
        if (listaDeAlunos.size() > 0) {
            for (Aluno aluno : listaDeAlunos) {
                if (aluno.isInadimplente()) {
                    situacao = "Inadimplente";
                } else {
                    situacao = "Regular";
                }
                if (!aluno.getModalidades().isEmpty() & aluno.getModalidades() != null) {
                    for (int i = 0; i < aluno.getModalidades().size(); i++) {
                        modalidades += aluno.getModalidades().get(i).getNome();
                        if (i != aluno.getModalidades().size() - 1) {
                            modalidades += ", ";
                        }
                    }
                    dtm.addRow(new Object[]{
                        aluno.getNome(),
                        aluno.getEndereco(),
                        aluno.getTelefonePrincipal(),
                        modalidades, "",
                        situacao});
                    modalidades = "";
                }
                if (aluno.getPacote() != null) {
                    dtm.addRow(new Object[]{
                        aluno.getNome(),
                        aluno.getEndereco(),
                        aluno.getTelefonePrincipal(),
                        "", aluno.getPacote().getNomePacote(),
                        situacao});
                    modalidades = "";
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "Nenhum aluno foi cadastrado!");
        }
    }

    public void filtrar(String valor) {
        try {
            TableRowSorter<DefaultTableModel> resultadoFiltro = new TableRowSorter<>(dtm);
            tabelaDeAlunos.setRowSorter(resultadoFiltro);
            resultadoFiltro.setRowFilter(RowFilter.regexFilter(valor));
        } catch (Exception e) {
            System.out.println("Caractere não aceito.");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoDeAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoDeAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoDeAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoDeAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GerenciamentoDeAlunos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField campoValorFiltro;
    private javax.swing.JButton editarBotao;
    private javax.swing.JButton excluirBotao;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaDeAlunos;
    // End of variables declaration//GEN-END:variables
}
